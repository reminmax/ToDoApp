<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             NavigationPage.HasNavigationBar="false"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             ios:Page.UseSafeArea="true"
             xmlns:fragments="clr-namespace:ToDoApp.Pages.Fragments" 
             xmlns:controls="clr-namespace:ToDoApp.Controls"
             xmlns:helpers="clr-namespace:ToDoApp.Helpers"
             x:Class="ToDoApp.Pages.TaskPage">
    
    <ContentPage.Content>

        <Grid RowDefinitions="60,*,Auto"
              RowSpacing="0"
              VerticalOptions="FillAndExpand"
              HorizontalOptions="FillAndExpand">

            <!--Custom navigation bar-->
            <controls:CustomNavigationBar Grid.Row="0"
                                          Title="{xct:Translate NavigationBarHeader_TaskPage}"
                                          NavigateBackCommand="{Binding NavigateBackCommand}"/>

            <StackLayout Grid.Row="1"
                         Margin="0,2,0,0"
                         xct:StateLayout.CurrentState="{Binding MainState}"
                         xct:StateLayout.AnimateStateChanges="True">

                <xct:StateLayout.StateViews>
                    <xct:StateView StateKey="Loading"
                                   VerticalOptions="FillAndExpand">
                        <fragments:LoadingView/>
                    </xct:StateView>
                </xct:StateLayout.StateViews>

                <!--Name-->
                <StackLayout Style="{StaticResource EntryDataStackLayoutStyle}">
                    <Label Text="{xct:Translate Name}"
                           Style="{StaticResource EntryHeaderLabelStyle}"/>
                    <Frame x:Name="NameFrame"
                           Style="{StaticResource FrameEntryStyle}">
                        <Entry Placeholder="{xct:Translate PlaceholderText_EnterTaskName}"
                               Text="{Binding Name.Value}"
                               Style="{StaticResource BaseEntryStyle}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <!--<VisualState.Setters>
                                            <Setter TargetName="NameFrame" Property="Frame.BorderColor" Value="{AppThemeBinding Light={StaticResource LightEntryBorderColor}, Dark={StaticResource DarkEntryBorderColor}}" />
                                            <Setter TargetName="NameFrame" Property="Frame.CornerRadius" Value="10" />
                                        </VisualState.Setters>-->
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <VisualState.Setters>
                                            <Setter TargetName="NameFrame" Property="Frame.BorderColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryColor}, Dark={StaticResource ButtonTextColor}}" />
                                            <Setter TargetName="NameFrame" Property="Frame.CornerRadius" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Entry.Effects>
                                <xct:RemoveBorderEffect/>
                            </Entry.Effects>
                        </Entry>
                    </Frame>
                    <Label IsVisible="{Binding Name.IsValid, Converter={xct:InvertedBoolConverter}}"
                           Text="{Binding Name.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           TextColor="{StaticResource FailColor}" />
                </StackLayout>

                <!--Notes-->
                <StackLayout Style="{StaticResource EntryDataStackLayoutStyle}">
                    <Label Text="{xct:Translate Notes}"
                           Style="{StaticResource EntryHeaderLabelStyle}"/>
                    <Frame x:Name="NotesFrame"
                           Style="{StaticResource FrameEntryStyle}">
                        <Editor Placeholder="{xct:Translate PlaceholderText_EnterSomeNotes}"
                               Text="{Binding Notes.Value}"
                               Style="{StaticResource BaseEditorStyle}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <VisualState.StateTriggers>
                                        </VisualState.StateTriggers>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <VisualState.Setters>
                                            <Setter TargetName="NotesFrame" Property="Frame.BorderColor" Value="{AppThemeBinding Light={StaticResource LightPrimaryColor}, Dark={StaticResource ButtonTextColor}}" />
                                            <Setter TargetName="NotesFrame" Property="Frame.CornerRadius" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>                            
                            <Editor.Effects>
                                <xct:RemoveBorderEffect/>
                            </Editor.Effects>
                        </Editor>
                    </Frame>
                    <Label IsVisible="{Binding Notes.IsValid, Converter={xct:InvertedBoolConverter}}"
                           Text="{Binding Notes.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           TextColor="{StaticResource FailColor}" />
                </StackLayout>

                <!--Categories list-->
                <Label Text="{xct:Translate SelectCategory}"
                       Margin="24,0,0,0"
                       Style="{StaticResource Body1_MulishSemiBold}"/>

                <Grid ColumnDefinitions="*,Auto"
                      HeightRequest="46"
                      Margin="24,2,24,8">
                    <controls:TaskCategoriesView ItemsSource="{Binding CategoriesList}"
                                                 Grid.Column="0"
                                                 SelectedItem="{Binding SelectedCategoryItem, Mode=TwoWay}"/>

                    <!--Add new category Button-->
                    <Button Grid.Column="1"
                            Command="{Binding AddNewCategoryCommand}"
                            Margin="8,0,0,0"
                            BackgroundColor="{AppThemeBinding Light={StaticResource LightPageBackgroundColor}, Dark={StaticResource DarkCardBackgroundColor}}"
                            BorderColor="#5460FE"
                            CornerRadius="18"
                            WidthRequest="46"
                            HeightRequest="46"
                            VerticalOptions="End" 
                            HorizontalOptions="End"
                            Visual="Material"
                            xct:TouchEffect.NativeAnimation="True">
                        <Button.ImageSource>
                            <FontImageSource Glyph="&#xf067;"
                                             Color="{AppThemeBinding Light={StaticResource LightPrimaryColor}, Dark={StaticResource ButtonTextColor}}"
                                             FontFamily="FontAwesomeLight"
                                             Size="30" />
                        </Button.ImageSource>
                    </Button>

                </Grid>

                <!--Date & Time-->
                <Grid ColumnDefinitions="*,*"
                      ColumnSpacing="0">

                    <!--Date-->
                    <StackLayout Style="{StaticResource EntryDataStackLayoutStyle}"
                                 Grid.Column="0">
                        <Label Text="{xct:Translate Date}"
                               Style="{StaticResource EntryHeaderLabelStyle}"></Label>
                        <Frame Style="{StaticResource FrameEntryStyle}">
                            <Grid ColumnDefinitions="25,*">
                                <Label Text="{x:Static helpers:FontAwesomeIcons.Calendar}"
                                       TextColor="{AppThemeBinding Light={StaticResource LightPlaceholderTextColor}, Dark={StaticResource DarkPlaceholderTextColor}}"
                                       FontSize="{StaticResource Body3FontSize}"
                                       FontFamily="FontAwesomeLight"
                                       VerticalTextAlignment="Center"/>
                                <DatePicker Date="{Binding Date.Value, Mode=TwoWay}"
                                            Grid.Column="1"
                                            MinimumDate="{Binding MinDate}"
                                            Format="dd/MM/yyyy"
                                            Style="{StaticResource BaseDatePickerStyle}">
                                    <DatePicker.Effects>
                                        <xct:RemoveBorderEffect/>
                                    </DatePicker.Effects>
                                </DatePicker>
                            </Grid>
                        </Frame>
                        <Label IsVisible="{Binding Date.IsValid, Converter={xct:InvertedBoolConverter}}"
                               Text="{Binding Date.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                               TextColor="{StaticResource FailColor}" />
                    </StackLayout>

                    <!--Time-->
                    <StackLayout Style="{StaticResource EntryDataStackLayoutStyle}"
                                 Grid.Column="1">
                        <Label Text="{xct:Translate Time}"
                               Style="{StaticResource EntryHeaderLabelStyle}"></Label>
                        <Frame Style="{StaticResource FrameEntryStyle}">
                            <Grid ColumnDefinitions="25,*">
                                <Label Text="{x:Static helpers:FontAwesomeIcons.Clock}"
                                       TextColor="{AppThemeBinding Light={StaticResource LightPlaceholderTextColor}, Dark={StaticResource DarkPlaceholderTextColor}}"
                                       FontSize="{StaticResource Body3FontSize}"
                                       FontFamily="FontAwesomeLight"
                                       VerticalTextAlignment="Center"/>
                                <TimePicker Time="{Binding Time.Value, Mode=TwoWay}"
                                            Grid.Column="1"
                                            Format="T"
                                            Style="{StaticResource BaseTimePickerStyle}">
                                    <TimePicker.Effects>
                                        <xct:RemoveBorderEffect/>
                                    </TimePicker.Effects>
                                </TimePicker>
                            </Grid>
                        </Frame>
                        <Label IsVisible="{Binding Time.IsValid, Converter={xct:InvertedBoolConverter}}"
                               Text="{Binding Time.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                               TextColor="{StaticResource FailColor}" />
                    </StackLayout>

                </Grid>
                
            </StackLayout>

            <!--Save button-->
            <Button x:Name="AddButton"
                    Grid.Row="2"
                    Text="{xct:Translate Save}"
                    Command="{Binding CreateTaskCommand}"
                    Margin="20,0,20,18"
                    Style="{StaticResource BaseButtonStyle}"
                    VerticalOptions="End"
                    Visual="Material"
                    xct:ShadowEffect.Color="{AppThemeBinding Light={StaticResource LightPrimaryColor}, Dark={StaticResource DarkButtonBackgroundColor}}"
                    xct:ShadowEffect.Radius="12"
                    xct:ShadowEffect.OffsetX="4"
                    xct:ShadowEffect.OffsetY="8"
                    xct:TouchEffect.NativeAnimation="True">
            </Button>
            
        </Grid>

    </ContentPage.Content>
    
</ContentPage>